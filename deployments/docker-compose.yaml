version: '3'

services:
  messaging:
    build:
      context: ../
      dockerfile: build/Dockerfile
    image: messaging
    container_name: messaging-server-app
    depends_on:
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    environment:
      POSTGRES_URI: postgres://myuser:mypassword@postgresql:5432/mydb?sslmode=disable
      REDIS_HOST: redis:6379
      WEBHOOK_URL: https://webhook.site/43ebbb45-7fa1-4543-8cc0-0896d95b185a
      REDIS_TTL: 3600
      SCHEDULER_INTERVAL: 120
      ENVIRONMENT: PRODUCTION
      LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    networks:
      - server

  postgresql:
    image: postgres:17-alpine
    container_name: messaging-server-postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - server

  redis:
    image: redis:8-alpine
    container_name: messaging-server-redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - server

volumes:
  pgdata:
  redisdata:

networks:
  server:
    driver: bridge
